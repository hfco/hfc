"use strict";(self.webpackChunkhfc_website=self.webpackChunkhfc_website||[]).push([[941],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return y}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),f=a,y=u["".concat(s,".").concat(f)]||u[f]||p[f]||o;return n?r.createElement(y,i(i({ref:t},d),{},{components:n})):r.createElement(y,i({ref:t},d))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3796:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return y},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],c={sidebar_label:"Why Agda",title:"Why Agda",sidebar_position:3,slug:"/why-agda"},s="Why Agda",l={unversionedId:"why-agda",id:"why-agda",title:"Why Agda",description:"Agda adds a new dimension of formality to programming.  It allows formal specifications to be written that can be",source:"@site/docs/why-agda.mdx",sourceDirName:".",slug:"/why-agda",permalink:"/docs/why-agda",draft:!1,editUrl:"https://github.com/hfco/docs/tree/master/docs/why-agda.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Why Agda",title:"Why Agda",sidebar_position:3,slug:"/why-agda"},sidebar:"docsSidebar",previous:{title:"Evidence-Based Development",permalink:"/docs/evidence-Based"},next:{title:"Why Haskell",permalink:"/docs/why-haskell"}},d={},u=[],p={toc:u},f="wrapper";function y(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)(f,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"why-agda"},"Why Agda"),(0,o.kt)("p",null,"Agda adds a new dimension of formality to programming.  It allows formal specifications to be written that can be\nboth proven and executed.  It integrates directly with Haskell - Agda specifications can be extracted into Haskell\nmodules that can be linked with existing and new Haskell code.  This increases confidence that the source code\nprecisely and correctly meets its functional requirements.  Why program when you can generate?"))}y.isMDXComponent=!0}}]);